######This contains codes for Single-cell or Single-nuclei RNA analysis pipeline

###Step1 Download file

#fastq files
wget url_link.ftp

#Genome, FASTA, GTF files (annotation)

#Create indices for Aligner (STAR)

#Two steps are required to perform STAR alignment. 
#In the first step, the user provides STAR with reference genome sequences (FASTA) and annotations (GTF), which STAR uses to create a genome index. 
#In the second step, STAR maps the userâ€™s reads data to the genome index.

#Download DNA (FASTA file). This is for mouse model
wget http://ftp.ensembl.org/pub/release-104/fasta/mus_musculus/dna/Mus_musculus.GRCm39.dna.primary_assembly.fa.gz


#Download Gene Annotation (GTF file). This is for mouse model
wget http://ftp.ensembl.org/pub/release-104/gtf/mus_musculus/Mus_musculus.GRCm39.104.gtf.gz

##Build indices for STAR

mkdir indices
mkdir indices/STAR
STAR --runThreadN 4 --runMode genomeGenerate --genomeDir indices/STAR --genomeFastaFiles reference.transcripts.fa


#hint
wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR523/ERR523158/ERR523158_1.fastq.gz


###Step2 Processing Raw file
##FastQC
#make a directory and do QC

mkdir fastqc_results
fastqc -o fastqc_results filename_1.fastq filename_2.fastq

###Step3 Trim the reads

mkdir fastq_trimmed_results
trim_galore --nextera -o fastq_trimmed_results filename_1.fastq filename_2.fastq

###Step4 Check QC again

fastqc -o fastqc_results filename_trimmed_1.fastq filename_trimmed_2.fastq




###Step5 STAR Alignment

mkdir results
mkdir results/STAR
STAR --runThreadN 4 --genomeDir indices/STAR --readFilesIn filename_1.fastq filename_2.fastq --outFileNamePrefix results/STAR/

#bash code for RNA alignment using STAR

#!/bin/bash


#SBATCH --job-name="star_alignment"
#SBATCH --mail-user=wittaya.hpc.cluster@gmail.com
#SBATCH --mail-type=ALL
#SBATCH --ntasks=1
#SBATHC --ntasks-per-node=1
#SBATCH --cpus-per-task=4
#SBATCH --mem-per-cpu=8G
#SBATCH --nodes=1
#SBATCH --time=3:00:00
#SBATCH --output=star_alignment_mouse.out

date

STAR --runThreadN 4 --genomeDir ~/rb32/test_scrna/clone_github/scRNA.seq.course/STAR/indices 
--readFilesIn ~/rb32/test_scrna/clone_github/scRNA.seq.course/Share/ERR522959_1.fastq 
              ~/rb32/test_scrna/clone_github/scRNA.seq.course/Share/ERR522959_2.fastq
--outFileNamePrefix ~/rb32/test_scrna/clone_github/scRNA.seq.course/alignment_results/ERR522959_


###Step6 Play with files
#convert BAM/SAM files

samtools view -S -b filename.sam > filename.bam
samtools view -h filename.bam > filename.sam

# sort reads by name
samtools sort -n original.bam -o sorted_by_name.bam

# remove secondary alignments
samtools view -b -F 256 sorted_by_name.bam -o primary_alignment_only.bam

# convert to fastq
bedtools bamtofastq -i primary_alignment_only.bam -fq read1.fq -fq2 read2.fq


###Step8 Construction of expression matrix
#check the reads again (after the alignment)

fastqc aligned_file.bam

#Map read.bam using STAR

$<path_to_STAR>/STAR --runThreadN 1 --runMode alignReads
--readFilesIn reads1.fq.gz reads2.fq.gz --readFilesCommand zcat --genomeDir <path>
--parametersFiles FileOfMoreParameters.txt --outFileNamePrefix <outpath>/output

#An example of how to quantify expression using Salmon is

$<path_to_Salmon>/salmon quant -i salmon_transcript_index -1 reads1.fq.gz -2 reads2.fq.gz -p #threads -l A -g genome.gtf --seqBias --gcBias --posBias




